{"version":3,"sources":["Output.js","App.js","reportWebVitals.js","index.js"],"names":["Output","props","weatherData","className","src","icon","alt","temp","description","city","country","App","useState","query","setQuery","weather","setWeather","getWeather","a","Axios","get","process","result","final","data","Math","floor","onSubmit","e","preventDefault","type","id","placeholder","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAsBeA,MApBf,SAAiBC,GAEf,IAAMC,EAAcD,EAAMC,YAC1B,OACE,mCACCA,GACD,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,SACE,qBAAKC,IAAG,yBAAoBH,EAAMC,YAAYG,KAAtC,QAAkDC,IAAI,OAEpE,oBAAGH,UAAU,OAAb,oBAAwBD,EAAYK,MAApC,WACA,mBAAGJ,UAAU,OAAb,SAAqBD,EAAYM,cACjC,oBAAGL,UAAU,OAAb,UAAqBD,EAAYO,KAAjC,KAAyCP,EAAYQ,iBCgC1CC,MA1Cf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGNG,EAHM,KAGGC,EAHH,KAMPC,EAAU,uCAAG,8BAAAC,EAAA,sEACIC,IAAMC,IAAN,4DAA+DP,EAA/D,+BAA2FQ,qCAD/F,OACXC,EADW,OAEXC,EAAM,CACVlB,KAAMiB,EAAOE,KAAP,QAAuB,GAAvB,KACNjB,KAAMkB,KAAKC,MAAMJ,EAAOE,KAAP,WACjBhB,YAAac,EAAOE,KAAP,QAAuB,GAAvB,YACbf,KAAMa,EAAOE,KAAP,KACNd,QAASY,EAAOE,KAAP,aAEXR,EAAWO,GACXT,EAAS,IAVQ,2CAAH,qDAuBhB,OACE,sBAAKX,UAAU,YAAf,UACE,mBAAGA,UAAU,QAAb,qBACA,uBAAMwB,SAbO,SAAAC,GACfA,EAAEC,iBAEFZ,KAUE,UACE,uBAAOa,KAAK,OAAOC,GAAG,cAAcC,YAAY,kBAAkBC,MAAOpB,EAAOqB,SARrE,SAAAN,GACfd,EAASc,EAAEO,OAAOF,UAQd,uBAAOH,KAAK,SAAS3B,UAAU,SAAS8B,MAAM,cAEhD,cAAC,EAAD,CAAQ/B,YAAaa,QC5BZqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.7bfe1a02.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Output (props) {\n\n  const weatherData = props.weatherData\n  return (\n    <> \n    {weatherData && \n    <div className='results'>\n        <div className='icon'>\n          <img src={`./weathericons/${props.weatherData.icon}.svg`} alt=\"\"/>\n        </div>\n    <p className='temp'>{`${weatherData.temp}`}&deg;C</p>\n    <p className='desc'>{weatherData.description}</p>\n    <p className='city'>{weatherData.city}, {weatherData.country}</p>\n      </div>}\n      \n    </>\n  )\n  \n}\n\nexport default Output;","import React, {useState} from 'react'\nimport Axios from 'axios'\nimport Output from './Output';\n\nfunction App() {\n\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState('')\n\n\n  const getWeather = async () => {\n    const result = await Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${process.env.REACT_APP_API_KEY}`)\n    const final={\n      icon: result.data['weather'][0]['icon'],\n      temp: Math.floor(result.data['main']['temp']),\n      description: result.data['weather'][0]['description'],\n      city: result.data['name'],\n      country: result.data['sys']['country'] \n    }\n    setWeather(final)\n    setQuery('')\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    \n    getWeather()\n  }\n\n  const onChange = e => {\n    setQuery(e.target.value)\n  }\n\n  return (\n    <div className='container'>\n      <p className='title'>Weather</p>\n      <form onSubmit= {onSubmit}>\n        <input type=\"text\" id='input-value' placeholder='Enter city name' value={query} onChange={onChange}/>\n        <input type=\"submit\" className=\"submit\" value=\"Search\" />\n      </form>\n      <Output weatherData={weather} />\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}