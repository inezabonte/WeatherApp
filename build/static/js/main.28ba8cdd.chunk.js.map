{"version":3,"sources":["components/Output.js","redux/actions/getWeatherAction.js","components/Home.js","App.js","redux/reducers/weatherReducer.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["Output","props","weatherData","console","log","className","icon","src","alt","temp","description","city","country","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_ERROR","UPDATE_INPUT","Home","state","query","weather","onSubmit","e","preventDefault","getWeather","onChange","updateInput","target","value","this","type","id","placeholder","Component","connect","fetchWeather","dispatch","payload","Axios","get","params","q","units","appid","process","then","res","data","Math","round","main","name","sys","catch","err","error","App","Fragment","initialState","reducers","combineReducers","action","middlewares","thunk","Store","createStore","RootReducer","compose","applyMiddleware","x","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.28ba8cdd.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Output(props) {\n  const { weatherData } = props;\n  console.log(weatherData)\n  return (\n        <div className=\"results\">\n\n          {weatherData.icon && (\n            <div className=\"icon\">\n            <img src={`./weathericons/${weatherData.icon}.svg`} alt=\"\" />\n          </div>\n          ) }\n\n          {weatherData.temp && (\n            <p className=\"temp\">\n            {`${weatherData.temp}`}\n            &deg;C\n          </p>\n          )}\n          \n          {weatherData.description && (\n            <p className=\"desc\">{weatherData.description}</p>\n          )}\n\n          {weatherData.city && (\n            <p className=\"city\">\n            {weatherData.city}\n            ,\n            {' '}\n            {weatherData.country}\n          </p>\n          )}\n          \n        </div>\n      \n  );\n}\n\nexport default Output;\n","import Axios from 'axios';\n\nexport const FETCH_WEATHER_SUCCESS = 'FETCH_WEATHER_SUCCESS'\nexport const FETCH_WEATHER_ERROR = 'FETCH_WEATHER_ERROR'\nexport const UPDATE_INPUT = 'UPDATE_INPUT'\n\nexport const getWeather = (city) => dispatch => {\n return Axios.get('https://api.openweathermap.org/data/2.5/weather',{\n   params: {\n     q: city,\n     units: 'metric',\n     appid: process.env.REACT_APP_API_KEY\n   }\n })\n    .then(res => {\n      const payload = {\n        icon: res.data.weather[0].icon,\n        temp: Math.round(res.data.main.temp),\n        description: res.data.weather[0].description,\n        city: res.data.name,\n        country: res.data.sys.country,\n      }\n\n      dispatch({\n        type: FETCH_WEATHER_SUCCESS,\n        payload: payload\n      })\n    })\n  .catch(err => {\n    dispatch({\n      type: FETCH_WEATHER_ERROR,\n      error: err\n    })\n  })\n  \n\n  \n};\n\nexport const updateInput = (city) => dispatch => {\n  dispatch({\n    type: UPDATE_INPUT,\n    payload: city\n  })\n\n}","import React, { Component } from 'react';\nimport Output from './Output';\nimport '../index.css';\nimport {getWeather,  updateInput} from '../redux/actions/getWeatherAction';\nimport { connect } from 'react-redux';\nclass Home extends Component {\n\n  state = {\n    query: '',\n    weather: {}\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.getWeather(this.props.city)\n  }\n\n  onChange = (e) => {\n    this.props.updateInput(e.target.value)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <p className=\"title\">Weather</p>\n          <form onSubmit={ this.onSubmit }>\n            <input type=\"text\" id=\"input-value\" placeholder=\"Enter city name\" value={ this.props.city } onChange={ this.onChange } />\n            <input type=\"submit\" className=\"submit\" value=\"Search\" />\n          </form>\n          <Output weatherData={this.props.weatherData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    city: state.fetchWeather.city,\n    weatherData: state.fetchWeather.weatherData\n  }\n}\n\nexport default connect(mapStateToProps,{updateInput, getWeather})(Home);\n","import React from 'react';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Home/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { FETCH_WEATHER_SUCCESS, FETCH_WEATHER_ERROR, UPDATE_INPUT } from '../actions/getWeatherAction'\n\nconst initialState = {\n  city: '',\n  weatherData: {},\n  error: null\n};\n\nexport const fetchWeatherData = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_INPUT:\n      return {\n        ...state,\n        city: action.payload,\n      };\n    case FETCH_WEATHER_SUCCESS:\n      return{\n        ...state,\n        weatherData: action.payload\n      }\n    case FETCH_WEATHER_ERROR:\n      return{\n        ...state,\n        weatherData: {icon: 'unknown'},\n        error: action.error\n      }\n    default:\n      return state;\n  }\n}\n\n","import { combineReducers } from 'redux';\nimport {fetchWeatherData} from './weatherReducer';\n\nconst reducers = combineReducers({\n  fetchWeather: fetchWeatherData\n});\n\nexport default reducers;\n","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport RootReducer from './reducers/reducer';\n\nconst initialState = {};\nconst middlewares = [thunk];\nlet devtools = (x) => x;\n\nif (\n  process.env.NODE_ENV !== 'production'\n&& typeof window !== 'undefined'\n  && window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n  devtools = window.__REDUX_DEVTOOLS_EXTENSION__();\n}\n\nconst Store = createStore(\n  RootReducer,\n  initialState,\n  compose(applyMiddleware(...middlewares), devtools),\n);\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport {Provider} from 'react-redux'\nimport store  from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n    ,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}